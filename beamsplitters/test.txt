import tensorflow as tf
import strawberryfields as sf
from strawberryfields.ops import *

# Use the TF backend
eng = sf.Engine(backend="tf", backend_options={"cutoff_dim": 10})
prog = sf.Program(1)

with prog.context as q:
    Coherent(1.0) | q[0]  # Example state

results = eng.run(prog)
state = results.state
ket = state.ket()

# Check normalization
norm = tf.reduce_sum(tf.abs(ket) ** 2)
print("Normalization (tf backend):", norm.numpy())  # Should be close to 1
print("TF state probability (tf backend):",state.fock_prob([1]))
# Use the Fock backend
eng_fock = sf.Engine(backend="fock", backend_options={"cutoff_dim": 10})
prog_fock = sf.Program(1)

with prog_fock.context as q:
    Coherent(1.0) | q[0]  # Same state

results_fock = eng_fock.run(prog_fock)
state_fock = results_fock.state

# Get probability of |1⟩ directly
prob_1_fock = state_fock.fock_prob([1])  # Probability of measuring |1⟩
print("Fock state probability (fock backend):", prob_1_fock)